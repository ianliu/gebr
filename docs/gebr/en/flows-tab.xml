<?xml version="1.0" encoding="utf-8"?>

<chapter
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  lang="en"
  version="5.0"
  xml:id="flows_tab">

  <title>The <guilabel>Flows</guilabel> tab</title>

  <para>In this tab, the user can manage the Flows of the current
    Line. Note the similarity with the <guilabel>Projects and
    Lines</guilabel> tab.</para>

  <tip>
    <para>Instead of the buttons in toolbar, try using
    the <emphasis role="bold">context menu</emphasis>. To do
    so, <emphasis role="bold">right-click</emphasis> on a Flow that has been 
    created. Notice that many features can be accessed through
    this method. For certain cases this is an easier and simpler
    choice.</para>
  </tip>

  <section xml:id="flows_create_flow">
    <title>Creating Flows</title>

    <para>The third-level element of GêBR are processing flows or
      just <emphasis>Flows</emphasis> (see
      <xref linkend="concepts_elements" />).</para>

    <para>To create a Flow, follow the steps:</para>

    <procedure>
      <step><para>In the tab <guilabel>Projects and Lines</guilabel>,
          check that some Line is selected.</para>
      </step>
      <step><para>Go to <guilabel>Flows</guilabel> tab, then
      left-click on
          <guiicon>
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="../../common-images/botao_criar_fluxo.png" />
              </imageobject>
            </inlinemediaobject>
        </guiicon>.</para>
      </step>
      <step>
        <para>A dialog box, named <guilabel>Flow "New Flow"
        Properties</guilabel>, will appear. Fill in the four standard fields:
          <guilabel>Title</guilabel>, <guilabel>Description</guilabel>
          (an one-line sentence), <guilabel>Author</guilabel> and
          an <guilabel>e-mail</guilabel> address. Click
          on <guibutton>OK</guibutton> when ready.</para>
      </step>
    </procedure>

    <para>After a Flow has been created, it will be 
      visible on the left side of the main window when the 
      <guilabel>Flows</guilabel> tab is selected. The 
      <guilabel>Details</guilabel> box, found on the right side of the
      main window, shows information about the selected Flow. The list of menus
      will appear automatically in a pop-up, and the user can assembling the flow 
      (see <xref linkend="flows_assembling_flow" />).
    </para>

    <tip>
      <para>The user can alter the position of the Flow in the list by
        dragging the Flow with the mouse to the desired
        position.</para>
    </tip>
    <tip>
      <para>Observe that the information bar just below the menu
        <guimenu>Actions</guimenu> shows the parents Line and Project
        of the selected Flow.</para>
    </tip>
  </section>
  
  <section xml:id="flows_assembling_flow">
  	<title>Assembling the Flow</title>
    <para>In GêBR, a <emphasis>Flow</emphasis> is a <emphasis>sequence
      of operations</emphasis> defined by the user. These operations, also
      called
      Flow's <emphasis>programs</emphasis><indexterm><primary>Program</primary></indexterm>,
      are organized into the following <emphasis>categories</emphasis>
      according to their purpose:</para>
    <itemizedlist>
      <listitem>
        <para>Data Compression</para>
      </listitem>
      <listitem>
        <para>Editing, Sorting and Manipulation</para>
      </listitem>
      <listitem>
        <para>File tools</para>
      </listitem>
      <listitem>
        <para>Filtering, Transforms and Attributes</para>
      </listitem>
      <listitem>
        <para>Gain, NMO, Stack and Standard Processes</para>
      </listitem>
      <listitem>
        <para>Graphics</para>
      </listitem>
      <listitem>
        <para>Import/Export</para>
      </listitem>
      <listitem>
        <para>Migration and Dip Moveout</para>
      </listitem>
      <listitem>
        <para>Multiple Supression</para>
      </listitem>
      <listitem>
        <para>Seismic Unix</para>
      </listitem>
      <listitem>
        <para>Simulation and Model Building</para>
      </listitem>
      <listitem>
        <para>Utilities</para>
      </listitem>
    </itemizedlist>
    
    <para>After the Flow has been created and a pop-up appear with several menus,
    the user can assemble the Flow:</para>
    
    <procedure>
      <step>
      	<para>Choose one of them and include it in the Flow with a double-click.</para>
      </step>
      
      <step>
      	<para>If the user needs a specific order to the selected programs of the flow, 
      	just need drag and drop the desired programs.</para>
      </step>
      
      <step>
      	<para>The program inserted come enabled if it doesn't have required parameters.</para>
      </step>
      
      <step>
      	<para>To better configuration of the programs or if the program have required parameters, 
      	the user can edit their parameters (see how in <xref linkend="flows_editing_parameters" />)</para>
      </step>
      
      <step>
      	<para>To change status of a program, the user has to right-click over it and select 
      	the Enable, if program is disabled, or select Disable, if program is enabled 
      	(for more information, see <xref linkend="flows_change_program_state" />)</para>
      
	      <tip>
	      	<para>If the user wants to change all programs, or a few, to the
			configured state simultaneously, he or she can select them by using
			<keycombo>
			  <keycap>Ctrl</keycap>
			  <mousebutton>Click</mousebutton>
			</keycombo>. Then right-click on one of the selected
			programs, choose the
			option <guilabel>Configured</guilabel> from the menu that
			appeared. All the programs that were selected will be
			altered to the state
			<guiicon>
			  <inlinemediaobject>
			  	<imageobject>
			      <imagedata fileref="../../common-images/icone_configurado.png" />
			    </imageobject>
			  </inlinemediaobject>
			</guiicon>.</para>
		  </tip>
		  
		  <important>
	        <para>To run a Flow 
	          <emphasis role="bold">all the programs</emphasis> listed in the 
	          <guilabel>Flow Sequence</guilabel> box must be 
	          <guilabel>Configured</guilabel> (<guiicon>
	            <inlinemediaobject>
	              <imageobject>
	                <imagedata fileref="../../common-images/icone_configurado.png" />
	              </imageobject>
	            </inlinemediaobject>
	        </guiicon>). Otherwise the Flow will not be executed as
	        expected.</para>
	      </important>
	      <important>
	        <para>The state of a Flow, or a set of Flows, can be changed
	          by using the
	          hotkey <emphasis role="bold">Spacebar</emphasis>, which
	          alters the state of the selected programs in the order
	          <emphasis role="bold">Disabled</emphasis> and 
	          <emphasis role="bold">Enabled</emphasis>. The meaning
	          of these states will be further described later on.</para>
	      </important>
	  </step>
   </procedure>
   
    <para>The Flow is ready to be executed. Click on 
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_executar_fluxo.png" />
          </imageobject>
        </inlinemediaobject>
    </guiicon> to do it.</para>
    <para>After the Flow has been, it will be visible on the left
      side of the main window when the <guilabel>Flows</guilabel> tab
      is selected. The <guilabel>Details</guilabel> box, found on the
      right side of the main window, shows information about the selected
      Flow .</para>
    <tip>
    	<para>There is no limit on the number of Flows 
    	that can be created inside a Line.</para>
    </tip>
    <tip>
      <para>The user can alter 
        <emphasis role="bold">the position</emphasis> of the Flow in
        the list by <emphasis role="bold">dragging the Flow with the
          mouse</emphasis> to the desired position.</para>
    </tip>
    <tip>
      <para>The <emphasis role="bold">information bar</emphasis> just bellow
        the menu <guimenu>Actions</guimenu> shows the complete Flow
        tree of the selected Flow.</para>
    </tip>
  </section>
  
  <section xml:id="flows_editing_parameters">
  	<title>Editing program's parameters</title>
  	
  	<para>Program's parameters compose a set of initial configurations
    defined by the user.</para>
    <para>To edit program's parameters the user must follow the steps below:</para>
    <procedure>
      <step>
        <para>Select the program from the <guilabel>Flow
            sequence</guilabel> box and click on
          <guiicon>
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="../../common-images/botao_editar_propriedades_projeto.png" />
              </imageobject>
            </inlinemediaobject>
          </guiicon> on the toolbar, or just double-click on the
          program. The <guilabel>Parameter</guilabel> box will
          appear on right side of window.</para>
      </step>
      <step>
        <para>Edit the program's parameters. Notice that each
          program's parameter vary greatly both in size and
          type.</para>
        <tip>
          <para>The user can click on the <guibutton>Help</guibutton> button
            (bottom right corner of the dialog box) to view
            the <emphasis role="bold">program's
              documentation</emphasis>. This will be certainly useful
            when the user is editing the programs parameters.</para>
        </tip>
        <tip>
          <para>The user can click on the <guibutton>Reset</guibutton> button
            when want the program to return to its default
            configurations.</para>
        </tip>
      </step>
      <step>
        <para>All changes are saved automatically, and to close the parameter box,
        the user just need change selection on left side.</para>
      </step>
    </procedure>
  </section>
  
  <section xml:od="flows_change_program_state">
  	<title>Changing a program's state</title>
  	
  	<para>Programs can be in two states only, <emphasis role="bold">Enabled</emphasis> (
  	<guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/icone_configurado.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon>) or <emphasis role="bold">Disabled</emphasis> (
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/icone_prog_desabilitado.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon>
      ).
      If a program is enabled with an error, the icon changes to 
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/gtk-dialog-warning.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon>.</para>
      
      <para>The user can alternate between these states by using two
      methods: <mousebutton>right-clicking</mousebutton>
      on the program and then select the desired state from the context menu 
      or using the shortcut
      <keycombo>
        <keycap>Spacebar</keycap>
    </keycombo> to change the state(s) of the selected programs.</para>
    
      <tip>
      <para>The user can select several programs whose state is desired to
        change by holding
        <keycombo>
          <keycap>Ctrl</keycap>
          <mousebutton>Click</mousebutton>
        </keycombo> or 
        <keycombo>
          <keycap>Shift</keycap>
          <mousebutton>Click</mousebutton>
      </keycombo>.</para>
    </tip>
    <tip>
      <para>Changing a program state does not alter its parameter
        configuration. The user can safely alternate between states.</para>
    </tip>
    <important>
      <para>
        <emphasis role="bold">Disabled</emphasis> programs (<guiicon>
          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="../../common-images/icone_prog_desabilitado.png" />
            </imageobject>
          </inlinemediaobject>
        </guiicon>) will be ignored when the Flow runs. This
        way, the user can <emphasis role="bold">enable and disable parts of
          the Flow</emphasis>.</para>
    </important>
  </section>
  
  <section xml:id="flows_edit_input_output">
  	<title>Editing the Flow's input and output files</title>
  	
  	<para>In many occasions, the user will need to extract data
      from an input file and/or generate as a result an output file,
      or even an log file in case an error occurs.</para>

    <para>To associate an input, output and error file to a Flow, the user must follow this steps:</para>
    <figure>
      <title>Input file setting</title>
      <mediaobject>
        <caption>Select the Flow Editor Tab. In the Flow sequence box
          the user can edit the input, output and log files for this Flow
          sequence.</caption>
        <imageobject>
          <imagedata fileref="../images/GeBR_flow_editor_input_file.png"  contentwidth="733px" contentdepth="485px" />
        </imageobject>
      </mediaobject>
    </figure>
    <procedure>
      <step>
		<para>Select a Flow, in the <guilabel>Flows</guilabel> tab.</para>
      </step>
      
      <step>
		<para>Below of the selected flow, the programs and entries with input, output and log files
		will be shown. The user can edit files paths by double clicking on them.
		</para>
      </step>
      
      <step>
        <para>Type in the path or click on the icon 
          <guiicon>
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="../../common-images/icone_escolher_arquivo.png" />
              </imageobject>
            </inlinemediaobject>
          </guiicon> to browse for the file (see
          <xref linkend="technical_aspects_remote_browsing"/>).
        </para>
      </step>
    </procedure>

    <para>If the user wants to use the folders associated to the Line,
      can either choose like above or the user can use the feature of
      autocomplete of the important folders of this Line. 
      (For more information, see <xref linkend="projects_lines_line_paths" />).
    </para>
    <figure>
      <title>Autocomplete of paths</title>
      <mediaobject>
        <caption>
          Autocomplete feature in the Input file of a Flow.
        </caption>
        <imageobject>
          <imagedata fileref="../images/GeBR_flow_editor_autocomplete.png"  contentwidth="919px" contentdepth="638px" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>When the user chooses a path for the 
      <guilabel>Flow's input/output</guilabel>, their file
      paths will appear in entries, indicated by the icons
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/icone_arquivo_entrada.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon> and 
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/icone_arquivo_saida.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon>, below and above the Flow's programs (if there are
      any).</para>
    <note>
      <para>If the user wishes to <emphasis role="bold">remove a
          set</emphasis> from the list, select them by pressing
        <emphasis role="bold">right-click</emphasis> and then click on 
        <guimenuitem>Exclude</guimenuitem>.</para>
    </note>
  </section>

  <section xml:id="flows_copy_paste_del_flows">

    <title>Copying, pasting and deleting Flows and Programs</title>

    <para>The clipboard provides the popular set of tools known as
      <emphasis>copy and paste</emphasis>. In GêBR, a Flow (or set of
      Flows) can be copied to the clipboard and paste back to the same
      Line or to other Lines. In the same manner, 
      a program (or set of programs) can be copied to the clipboard too,
      and can be paste to the same Flow or to other Flows.</para>
      
      <para>To copy Flows or programs to the clipboard, first
      select them with the mouse, and then use the button
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_copiar_fluxo.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon> or press the usual shortcut
      <keycombo>
        <keycap>Ctrl</keycap>
        <keycap>C</keycap>
    </keycombo>. After copying the user can paste it
      by clicking on the button
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_colar_fluxo.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon> or by simply using the shortcut 
      <keycombo>
        <keycap>Ctrl</keycap>
        <keycap>V</keycap>
    </keycombo>.</para>

    <para>To delete a Flow (or set of Flows) and a Program (or set a Programs), 
    select them then click on 
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_apagar_projeto.png" />
          </imageobject>
        </inlinemediaobject>
    </guiicon>.</para>

    <tip>
      <para>The user can handle several Flows at once by holding
        <keycombo>
          <keycap>Ctrl</keycap>
          <mousebutton>Left-click</mousebutton>
        </keycombo> or 
        <keycombo>
          <keycap>Shift</keycap>
          <mousebutton>Left-click</mousebutton>
      </keycombo>.</para>
    </tip>
    
    <caution>
      <para>GêBR does <emphasis role="bold">not</emphasis> ask for
        confirmation before deleting programs from a Flow.</para>
    </caution>
  </section>

  <section xml:id="flows_edit_properties_flow">
    <title>Editing Flow's properties</title>
    <para>To edit Flow's properties the user must first select the Flow,
    then click on
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_editar_propriedades_projeto.png" />
          </imageobject>
        </inlinemediaobject>
    </guiicon>.</para>
    <para>In the <guilabel>Flows properties</guilabel> dialog box the user
    can edit the
    fields <guilabel>Title</guilabel>, <guilabel>Description</guilabel>, <guilabel>Author</guilabel>
    and <guilabel>Email</guilabel>.</para>
  </section>

  <section xml:id="flows_edit_dictionary">
    <title>Editing the Flow's parameter dictionary</title>
    <para>This feature is documented in the section 
      <xref linkend="technical_aspects_dictionary_variables" />.</para>
  </section>

  <section xml:id="flows_save_state_flow">
    <title>Saving a Flow's state</title>
    <para>The user will find situations when working with GêBR it will be
      useful to use an existing Flow as a basis to create new
      Flows. For example, the user might want to experiment with Flows that
      are only slightly different from one another, however without
      having to discard or modify the original Flow.</para>

    <para>A way to do this is to copy and paste the Flow (see the
      section <xref linkend="flows_copy_paste_del_flows" />.
      Another way is to save the state of the original Flow, then edit
      it to the heart desire, and when the user wishes, he or she can return the
      Flow to its original state. To
      <emphasis role="bold">save the Flow's state</emphasis>:</para>
    <procedure>
      <step>
        <para>Select the Flow and left-click on 
          <guiicon>
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="../../common-images/botao_salvar_estado.png" />
              </imageobject>
            </inlinemediaobject>
        </guiicon>.</para>
      </step>
      <step>
        <para>If the user wants, he or she can write a comment on the state in the
        dialog box <guilabel>Save the Flow's state</guilabel>, as to
        identify this saved state later on.</para>
      </step>
      <step>
        <para>Left-click on 
          <guibutton>OK</guibutton>.</para>
      </step>
    </procedure>
    <note>
      <para>There is no limit on the number of states for each
      Flow.</para>
    </note>

    <para>To open the list of saved states left-click on 
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_salvar_estado_lista.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon>, to the right of the button 
      <guiicon>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../../common-images/botao_salvar_estado.png" />
          </imageobject>
        </inlinemediaobject>
      </guiicon>, then select the state that is desired to recover. Whenever
     the user select a saved state from the list, the dialog
      <emphasis>Backup Current State</emphasis> will appear. If the user click on 
      <guibutton>Yes</guibutton> the dialog <emphasis>Save the Flow's
      State</emphasis> will appear, where the user can save this new
      state. If the user click on <guibutton>No</guibutton>, GêBR will
      simply revert to the chosen state without saving the current
      state.</para>
    <tip>
      <para>If the user is sure that he or she has saved the current state, GêBR
      recommends that the user click on <guibutton>No</guibutton>, in the
      dialog box <emphasis>Backup Current State</emphasis>, as to
      avoid a bloated state list.</para>
    </tip>
    <caution>
      <para>GêBR continuously saves the list of Flow states. Even if
      the user turns off the computer this list will be recovered when the user
      opens GêBR again. However, if the user <emphasis role="bold">deletes
      the Flow</emphasis> all the saved states
      will <emphasis role="bold">immediately disappear
      forever</emphasis>.</para>
    </caution>
  </section>

  <section xml:id="flows_import_flow">
    <title>Importing/Exporting a Flow</title>
    <para>Although GêBR maintains all the data, the user still might wish
      to copy the Flows to file to be able to share them, for
      instance.</para>

        <para>In the window <guilabel>Save Flow</guilabel>, navigate
          to a desired directory and type a name for the file
          (GêBR will automatically determine the extension
          <filename class="exension">flw</filename>). To do so:</para>
    <procedure>
      <step>
        <para> In case of Import, the user must first 
          <emphasis role="bold">select a Flow</emphasis> (or see
          <xref linkend="projects_lines_create_projects" />, if one does not exist).</para>
      </step>
      <step>
        <para>Select the tab 
          <guilabel>Flows</guilabel> and left-click on 
          <guiicon>
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="../../common-images/botao_importar_projeto.png" />
              </imageobject>
            </inlinemediaobject>
          </guiicon> to import or on 
          <guiicon>
            <inlinemediaobject>
              <imageobject>
                <imagedata fileref="../../common-images/botao_exportar_projeto.png" />
              </imageobject>
            </inlinemediaobject>
          </guiicon> to export.
        </para>
      </step>
      <step>
        <para>Navigate through the files and
          select the Flow that is desired to be
          imported/export.</para>
      </step>
    </procedure>
    <para>In case of Import, the imported Flow will be
      listed along with any other Flows of the
      selected Line. Otherwise, in case of Export,
      the file containing the exported Flow will be
      created.</para>
  </section>


	<section xml:id="flows_execute_flow">
		<title>Executing a Flow</title>

		<para>Once assembled a Flow, it can be executed in two ways:
			<itemizedlist>
				<listitem>
					Advanced execution (
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/detailed_execution.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon>). 
				</listitem>
				<listitem>
					Basic execution (
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/botao_executar_fluxo.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon>). 
				</listitem>
			</itemizedlist>
		</para>
		
		<para>The user can select more than one Flow, and then execute them all. To make a
			multiple selection, click over the Flows, while <keycap>Ctrl</keycap> is pressed or use
			the arrow keys while <keycap>Shift</keycap> is pressed.
		</para>

			<section xml:id="flows_detailed_execution">
				<title>Advanced Execution</title>
				<para>
					The user can set many execution details before triggering a Job and then he or she just have to
					click on Run to execute the Job. 
				</para>
				<figure>
					<title>Advanced execution</title>
					<mediaobject>
						<caption>Execution settings window.
						</caption>
						<imageobject>
							<imagedata fileref="../images/GeBR_flows_detailed_execution_multiple.png"  contentwidth="309px" contentdepth="397px" />
						</imageobject>
					</mediaobject>
				</figure>
				<para>
					By clicking over 
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/detailed_execution.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon>, the user can set:

					<procedure>
						<step>
							How the Jobs are going to be executed.
							<substeps>
								<step><guilabel>One after another:</guilabel>
									  Flows can be executed one after another, in
									  the order they are on the Flows list.
									  Each Flow waits for the end of the previous job, to be
									  executed.
								</step> 
								<step><guilabel>Simultaneously:</guilabel>
								      Flows are executed parallely, all of them 
								      at the same time. It is just possible if
							          there is no dependency between Flows.
							    </step> 
							</substeps>
						</step>
						<step>
							Whether the Jobs must wait for some task or not. The user can trigger the Jobs after
							the ending of another task or immediately after clicking the execution button.
						</step>
						<step>
							Where he wants to dispatch the Jobs. The user can choose the nodes or the set of nodes which he wants to
							process the Jobs. A special option is the Choose automatically, that
							permits the Maestro to search for the least loaded nodes or set of nodes. As the user changes this parameter,
							GêBR presents the number of cores of the choosen group.
						</step>
						<step>
							The number of parts the user wants to split the Jobs. This parameter is valid just in the case
							there is a parallelizable Job among the selected Jobs. The nominal capacity is given by
							the number of cores, according to the choice of the group of nodes. For
							non-parallelizable Jobs, this parameter is automatically set to 1. For more
							information, consult <xref linkend="technical_aspects_multicores"/>.
						</step>
						<step>
							How the Job must compete with the other processes of the system. In very loaded nodes,
							this tool can make all the difference because the Jobs will have less precedence than the
							other processes running on the system. For more
							information, consult <xref linkend="technical_aspects_priority_execution"/>.
						</step>
					</procedure>
				</para>

				<important>
					<para>
						The first option just appear if the user selects multiple Jobs for running (multiple execution).
					</para>
				</important>
				<note>
					<para>
						The user can save itens 3, 4 and 5 for future executions by checking <guilabel>Save Preferences</guilabel>.
					</para>
				</note>
			</section>

			<section xml:id="flows_quick_execution">
				<title>Basic execution</title>
				<para>
					By clicking on 
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/botao_executar_fluxo.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon> 
					, the Job will be triggered with the following settings:

					<procedure>
						<step>
							Sequentially
						</step>
						<step>
							Immediatelly
						</step>
						<step>
							Saved group of nodes
						</step>
						<step>
							Saved number of parts (if applicable)
						</step>
						<step>
							Saved priority
						</step>
					</procedure>
				</para>
				<para>
					It is a fast way to execute, skipping the configurations of the Advanced Execution.
				</para>
				<note>
					<para>
						Useful keybinds are available here: <keycap>Ctrl+R</keycap> runs the selected Flows
						one after another; <keycap>Ctrl+Shift+R</keycap> runs the
						selected Flows parallely (keybind activated just if multiple Flows are selected).
					</para>
				</note>
			</section>
		</section>
		
	<section xml:id="flows_loop">
		<title>Executing a Flow multiple times</title>
		
		  <para>The
	      program <emphasis>Loop</emphasis><indexterm><primary>Loop</primary></indexterm>
	      (from the category
	      <emphasis role="bold">Loops</emphasis>) has a totally different
	      usage compared to the remaining programs from GêBR. The user is going
	      to see some of these differences.</para>
	
	      <para>When the user adds the program Loop, it always appears
	      on the top of the Flow. That happens to indicate that the Flow
	      is going to be executed more than once, according to the
	      parameters set for the program. (see
	      <xref linkend="flows_editing_parameters" /> for
	      further details).</para>
	
	    <figure>
	      <title>Loop program</title>
	    <mediaobject>
	      <caption>Screenshot of program <emphasis>Loop</emphasis>, added
	      to a Flow and properly configured.</caption>
	      <imageobject>
	        <imagedata fileref="../images/GeBR_flow_editor_loop.png"  contentwidth="793px" contentdepth="537px" />
	      </imageobject>
	    </mediaobject>
	    </figure>
	
	    <para>After the <emphasis>Loop</emphasis> is added, the user has
	      access to a new variable,
	      the <emphasis role="bold">iter</emphasis> (see
				<xref linkend="technical_aspects_dictionary_variables" />). The value of this 
				special variable is modified
	      on each iteration (increasing or decrementing),
	      according to the parameters set.</para>
	
	    <figure>
	      <title>Loop parameters</title>
	    <mediaobject>
	      <caption>Screenshot of the edition from parameters
	        of <emphasis>Loop</emphasis> program, with a simple example of
	        parameters setting.</caption>
	      <imageobject>
	        <imagedata fileref="../images/GeBR_flow_editor_loop_parameters.png"  contentwidth="468px" contentdepth="387px" />
	      </imageobject>
	    </mediaobject>
	    </figure>
	</section>

	<section xml:id="flows_edit_comments_flow">
	    <title>Editing comments</title>
	    <para>This button appears in the <guilabel>Projects and
	    Lines</guilabel> tab and in <guilabel>Flows</guilabel> tab. This
	    button allows the user to add
	    comments<indexterm><primary>Report</primary><secondary>of a
	    Flow</secondary></indexterm> about the selected Line or Flow. See
	    <xref linkend="projects_lines_edit_comments_project" />.</para>
  </section>

  <section xml:id="flows_view_report_flow">
    <title>View Report</title>
    <para>This button appears in the <guilabel>Projects and
    Lines</guilabel> tab and in <guilabel>Flows</guilabel> tab. This
    button allows the user to View the Report about the Line or Flow
    in use. The difference is that the Line's Report can include the
    Flow's Report.  All other functions are described in
    <xref linkend="projects_lines_view_report_project" />.</para>
  </section>
</chapter>
