<?xml version="1.0" encoding="utf-8"?>

<chapter
	xmlns="http://docbook.org/ns/docbook"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	lang="en"
	version="5.0"
	xml:id="flows_tab">

	<title>The <guilabel>Flows</guilabel> tab: basic aspects</title>

	<para>In the <guilabel>Flows</guilabel> tab, processing flows are created, edited and submitted
	for execution. After creating an empty flow, the desired programs can be added to it and the I/O
	files and parameters can be configured. Once properly configured (GêBR warns if not), the flow can
	be submitted for execution. Prior to the submission, execution details can be set.</para>

	<figure>
		<title>Flows tab</title>
		<mediaobject>
			<caption>Flows tab. The interface is split in two parts: left (with the list of
			flows) and right panels (with pertinent details depending on the
			context).</caption>
			<imageobject>
				<imagedata fileref="../images/GeBR_flows_tab.png"
					contentwidth="820px" contentdepth="566px"/>
			</imageobject>
		</mediaobject>
	</figure>

	<para>The left panel contains the list of flows of the selected line in the previous tab. The
	right panel exhibits information of the currently selected flow, divided in two parts:
	<itemizedlist>
	  <listitem>On the top basic information such as flow title, last modification date and last
	  execution date can be quickly consulted;</listitem>

	  <listitem>On the bottom there is a summary of the flow, with the input/output/error files, the
	  programs that compose the flow and the non default parameters. Text searches can be done by
	  pressing <keycombo><keycap>Ctrl</keycap><keycap>F</keycap></keycombo>.  Additionally, problems
	  in the flow assembly are warned in this window. To go to the summary view, select (single click
	  on) a flow.</listitem>
	</itemizedlist>
	</para>
	
	<section xml:id="flows_menus_list">
		<title>The menus list</title>

		<para>In <xref linkend="concepts_programs_and_menus" /> a menu was defined as a set of one
		or more programs that can process data. These menus are accessible in the
		<emphasis>Flows</emphasis> tab, trough the button menu list
		<guiicon><inlinemediaobject><imageobject><imagedata
		fileref="../../common-images/menu-list-icon.png"/>
		</imageobject></inlinemediaobject></guiicon> presented in the toolbar.</para>

		<para>After clicking the menu list button, a pop-up window is shown with a list of
		categories. All menus registered inside GêBR are classified into these categories, which
		can be expanded by clicking the <guiicon><inlinemediaobject><imageobject><imagedata
		fileref="../../common-images/icone_colapsado.png"/>
		</imageobject></inlinemediaobject></guiicon> icon on the left.</para>

		<note>
			<para>A menu can appear more than once in the unfiltered list, since it
			can pertain to any number of categories.</para>
		</note>

		<para>By typing parts of the menu title or description in the text box on the top, it is
		possible to filter the menus list. This eases the task of finding or discovering a menu
		when its purpose is known. For example, it is possible to search for menus related to
		<emphasis>migration</emphasis> (see <xref linkend="flows_menus_list_filter" />).</para>

		<figure xml:id="flows_menus_list_filter">
			<title>Filtering the menus list</title>
			<mediaobject>
				<caption>The image shows the menus list being filtered by
				<emphasis>migration</emphasis>. All menus that have the word migration in
				its title or description are shown.</caption>
				<imageobject>
					<imagedata fileref="../images/flows_menus_list_filter.png"
						contentwidth="531px" contentdepth="257px"/>
				</imageobject>
			</mediaobject>
		</figure>

	</section>

	<section xml:id="flows_create_flow">
	  <title>Creating flows</title>
	  
	  <para>In the <guilabel>Flows</guilabel> tab, the button
	  <guiicon><inlinemediaobject><imageobject><imagedata
	  fileref="../../common-images/botao_criar_fluxo.png" />
	  </imageobject></inlinemediaobject></guiicon> creates a flow.  Title, description and flow's
	  author should be provided in the creation, and can be further edited through the button
	  <guiicon><inlinemediaobject><imageobject><imagedata
	  fileref="../../common-images/botao_editar_propriedades_projeto.png"
	  /></imageobject></inlinemediaobject></guiicon>.</para>


	  <para>After following these steps, the flow will appear on the left side of the main window. The
	  right side will show information about the flow.</para>

	  <tip>
	    <para>It's possible to alter the position of the flow in the list by dragging the flow
	    with the mouse to the desired position.</para>
	  </tip>
	  
	  <para>A processing <emphasis>flow</emphasis> is a sequence of operations defined by the
	  user. These operations, also called
	  <emphasis>programs</emphasis><indexterm><primary>Program</primary></indexterm>, are organized
	  into the following <emphasis>categories</emphasis> according to their purpose:</para>

	  <itemizedlist>
	    <listitem>
	      <para>Data Compression</para>
	    </listitem>
	    <listitem>
	      <para>Editing, Sorting and Manipulation</para>
	    </listitem>
	    <listitem>
	      <para>File tools</para>
	    </listitem>
	    <listitem>
	      <para>Filtering, Transforms and Attributes</para>
	    </listitem>
	    <listitem>
	      <para>Gain, NMO, Stack and Standard Processes</para>
	    </listitem>
	    <listitem>
	      <para>Graphics</para>
	    </listitem>
	    <listitem>
	      <para>Import/Export</para>
	    </listitem>
	    <listitem>
	      <para>Migration and Dip Moveout</para>
	    </listitem>
	    <listitem>
	      <para>Multiple Supression</para>
	    </listitem>
	    <listitem>
	      <para>Seismic Unix</para>
	    </listitem>
	    <listitem>
	      <para>Simulation and Model Building</para>
	    </listitem>
	    <listitem>
	      <para>Utilities</para>
	    </listitem>
	  </itemizedlist>

	  <para>After the flow is created, a pop-up appears with the available menus and is possible
	  assemble the flow:</para>

		<procedure>
			<step>
				<para>Choose one of them and include it in the flow with a
					double-click.</para>
			</step>

			<step>
				<para>To specify an order to the programs, simply drag and drop the 
					desired programs.</para>
			</step>

			<step>
				<para>Inserted program comes in an enabled state (unless they
					have required parameters).</para>
			</step>

			<step>
				<para>Some programs have required parameters. To edit or to alter the
					default parameters, consult  <xref linkend="flows_editing_parameters" />.</para>
			</step>

			<step>
				<para>To change the program status, right-click over it and 
					choose the first option, <guilabel>Enable/Disable</guilabel>
					(for more information, see <xref linkend="flows_change_program_state" />).</para>
				<important>
					<para>To run a flow 
						<emphasis role="bold">all the programs</emphasis> listed in the 
						<guilabel>Flow Sequence</guilabel> box must be 
						<guilabel>enabled</guilabel>
						(<guiicon><inlinemediaobject><imageobject>
									<imagedata fileref="../../common-images/icone_configurado.png" />
						</imageobject></inlinemediaobject></guiicon>).
						Otherwise the flow will not be executed as expected.
					</para>
				</important>
			</step>
		</procedure>

		<para>The flow is ready to be executed. Click on 
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/botao_executar_fluxo.png" />
					</imageobject>
				</inlinemediaobject>
			</guiicon> or on
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/detailed_execution.png" />
					</imageobject>
				</inlinemediaobject>
			</guiicon>
			to do it (for more information, consult <xref
				linkend="flows_execute_flow"/>).</para>

		<para>After the flow has been assembled, it will be visible on the left side of the main
		window when the <guilabel>Flows</guilabel> tab is selected. The
		<guilabel>Details</guilabel> box, found on the upper right side of the main window, shows
		information about the selected flow. The <guilabel>Flow Review</guilabel> box shows a
		brief of the flow and contains information like input, output and log file, flow's programs
		and some of its parameters.</para>
	</section>

	<section xml:id="flows_change_program_state">
		<title>Program states</title>

		<para>Programs can be in two states only, <emphasis role="bold">Enabled</emphasis>
			(<guiicon><inlinemediaobject><imageobject>
						<imagedata fileref="../../common-images/icone_configurado.png" />
			</imageobject></inlinemediaobject></guiicon>)
			or <emphasis role="bold">Disabled</emphasis>
			(<guiicon><inlinemediaobject><imageobject>
						<imagedata fileref="../../common-images/icone_prog_desabilitado.png" />
					</imageobject></inlinemediaobject></guiicon>).
			If a program is enabled with an error, the icon changes to 
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/gtk-dialog-warning.png" />
		</imageobject></inlinemediaobject></guiicon>.
	</para>

		<para>Alternate between these states by using two
			methods: <mousebutton>right-clicking</mousebutton>
			on the program and then select the desired state from the context menu 
			or using the shortcut
			<keycombo>
				<keycap>Spacebar</keycap>
		</keycombo> to change the states of the selected programs.
			It's possible to select several programs whose state is desired to
				change by holding
				<keycombo>
					<keycap>Ctrl</keycap>
					<mousebutton>Click</mousebutton>
				</keycombo> or 
				<keycombo>
					<keycap>Shift</keycap>
					<mousebutton>Click</mousebutton>
			</keycombo>.</para>
		<tip>
			<para>Changing a program state does not alter its parameter configuration. 
				This way, alternate between states is an operation completely safe.</para>
		</tip>
		<important>
			<para>
				<emphasis role="bold">Disabled</emphasis> programs
				(<guiicon><inlinemediaobject><imageobject>
							<imagedata fileref="../../common-images/icone_prog_desabilitado.png" />
				</imageobject></inlinemediaobject></guiicon>)
				will be ignored when the flow runs. This
				way, the user can <emphasis role="bold">enable and disable parts of
					the flow</emphasis>.</para>
		</important>
	</section>

	<section xml:id="flows_editing_parameters">
		<title>Editing program's parameters</title>

		<para>Program's parameters compose a set of initial configurations
			defined by the user.</para>
		<para>To edit program's parameters follow the steps below:</para>
		<procedure>
			<step>
				<para>Select the program from the list and click on
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/botao_editar_propriedades_projeto.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon> on the toolbar, or just double-click on the
					program. The <guilabel>Parameter</guilabel> box will
					appear on right side of window over the <guilabel>Flow Review</guilabel> box.</para>
			</step>
			<step>
				<para>Edit the program's parameters. Notice that each
					parameter vary greatly both in size and
					type. In parameters fields that can be filled with numbers/text,
					variables can be used (<xref linkend="flows_dictionary_variables"/>).
				</para>
				<tip>
					<para>Click on the <guibutton>Help</guibutton> button
						(bottom right corner of the dialog box) to view
						the <emphasis role="bold">program's
							documentation</emphasis>. This will be certainly useful
						when the user is editing the programs parameters.</para>
				</tip>
				<tip>
					<para>Click on the <guibutton>Reset</guibutton> button 
						to return to default configurations.</para>
				</tip>
			</step>
			<step>
				<para>All changes are saved automatically, and to close the <guilabel>Parameter</guilabel> box,
					simply change selection on left side.</para>
			</step>
		</procedure>
	</section>

	<section xml:id="flows_edit_input_output">
		<title>Editing the flow's input and output files</title>

		<para>In many occasions, it's necessary to extract data
			from an input file and/or generate as a result an output file,
			or even an log file in case an error occurs.</para>

		<para>To associate an input, output and error file to a flow, follow
			these steps:</para>
		<figure>
			<title>Input file setting</title>
			<mediaobject>
				<caption>Select the Flow Editor Tab. In the Flow Sequence box
					it's possible to edit the input, output and log files for this flow
					sequence.</caption>
				<imageobject>
					<imagedata fileref="../images/GeBR_flows_input_file.png"
						contentwidth="286px" contentdepth="201px" />
				</imageobject>
			</mediaobject>
		</figure>
		<procedure>
			<step>
				<para>Select a flow, in the <guilabel>Flows</guilabel> tab.</para>
			</step>

			<step>
				<para>Below the selected flow, the programs and entries with input, output and log files
					will be shown. To edit files paths, just double clicking on them.
				</para>
			</step>

			<step>
				<para>Type in the path (important folders can be consulted/choosen by
					typing <keycap>&lt;</keycap>)
					or click on
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/icone_escolher_arquivo.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon> to browse for the file (see
					<xref linkend="technical_aspects_remote_browsing"/>).
				</para>
			</step>
		</procedure>

		<para>For using the folders associated to the line, choose them like above or use 
			the feature of autocomplete of the important folders of this line. 
			For more information, see <xref linkend="projects_lines_line_paths" />.
		</para>
		<figure>
			<title>Autocomplete of paths</title>
			<mediaobject>
				<caption>
					Autocomplete feature in the Input file of a flow. Analogous to
					the dictionary variables, to see the available paths it is just 
					necessary to type a <keycap>&lt;</keycap>.
				</caption>
				<imageobject>
					<imagedata fileref="../images/GeBR_flows_autocomplete.png"
						contentwidth="287px" contentdepth="389px" />
				</imageobject>
			</mediaobject>
		</figure>

		<para>When a path is chosen for the 
			<guilabel>flow's input/output</guilabel>, their file
			paths will appear in entries, indicated by the icons
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/icone_arquivo_entrada.png" />
					</imageobject>
				</inlinemediaobject>
			</guiicon> and 
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/icone_arquivo_saida.png" />
			</imageobject></inlinemediaobject></guiicon>,
			below and above the flow's programs (if there are
			any).</para>
		<note>
			<para>If necessary <emphasis role="bold">removing a
					set</emphasis> from the list, select them by pressing
				<emphasis role="bold">right-click</emphasis> and then click on 
				<guimenuitem>Exclude</guimenuitem>.</para>
		</note>
	</section>

	<section xml:id="flows_copy_paste_del_flows">

		<title>Copying, pasting and deleting flows and programs</title>

		<para>The clipboard provides the popular set of tools known as
			<emphasis>copy and paste</emphasis>. A flow (or set of
			flows) can be copied to the clipboard and paste back to the same
			line or to other lines. In the same manner, 
			a program (or set of programs) can be copied to the clipboard too,
			and can be paste to the same flow or to other flows.</para>

		<para>To copy flows or programs to the clipboard, first
			select them with the mouse, and then use the button
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/botao_copiar_fluxo.png" />
					</imageobject>
				</inlinemediaobject>
			</guiicon> or press the usual shortcut
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>C</keycap>
			</keycombo>. After copying the user can paste it
			by clicking on the button
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/botao_colar_fluxo.png" />
					</imageobject>
				</inlinemediaobject>
			</guiicon> or by simply using the shortcut 
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>V</keycap>
		</keycombo>.</para>

		<para>To delete a flow (or set of flows) and a program (or set a programs), 
			select them then click on 
			<guiicon>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="../../common-images/botao_apagar_projeto.png" />
		</imageobject></inlinemediaobject></guiicon>.
	</para>

			<para>It's possible to handle several flows at once by pressing
				<keycombo>
					<keycap>Ctrl</keycap>
					<mousebutton>Left-click</mousebutton>
				</keycombo> or 
				<keycombo>
					<keycap>Shift</keycap>
					<mousebutton>Left-click</mousebutton>
			</keycombo>.</para>

		<caution>
			<para>GêBR does <emphasis role="bold">not</emphasis> ask for
				confirmation before deleting programs from a flow.</para>
		</caution>
	</section>

	<section xml:id="flows_execute_flow">
		<title>Executing flows</title>
		<indexterm><primary>Flow</primary></indexterm>

		<para>Once assembled, a flow can be executed in two ways:
			<itemizedlist>
				<listitem>
					Run - Basic execution (
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/botao_executar_fluxo.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon>). 
				</listitem>
				<listitem>
					Setup and Run - Advanced execution (
					<guiicon>
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../../common-images/detailed_execution.png" />
							</imageobject>
						</inlinemediaobject>
					</guiicon>). 
				</listitem>
			</itemizedlist>
		</para>

		<para>More than one flow can be submitted for execution at once. To make a multiple
		selection, click over the flows, while <keycap>Ctrl</keycap> is pressed or use the arrow
		keys while <keycap>Shift</keycap> is pressed.</para>

		<para>After being triggered, the execution can be followed in the same
		window or, for more detailed information, in the <guilabel>Jobs</guilabel>
		tab (see <xref linkend="flows_execution_infobar"/> and
		<xref linkend="jobs_tab"/>).</para>

		<section xml:id="flows_quick_execution">
			<title>Run</title>

			<para>By clicking on <guiicon><inlinemediaobject><imageobject><imagedata
			fileref="../../common-images/botao_executar_fluxo.png" />
			</imageobject></inlinemediaobject></guiicon>, the flow will be immediately
			submitted with following default settings:

			<procedure>
			  <step>In case of multiple flows, the default is to execute them
			  sequencially (one after another).</step>

			  <step>The execution starts immediately.</step>

			  <step>Some flows give rise to jobs, that can be splitted in smaller parts,
			  called
			  <emphasis>tasks</emphasis><indexterm><primary>Task</primary></indexterm>. In
			  this case, these tasks are distributed among available processing nodes,
			  according their nominal capacity (total number of cores). If the job cannot be
			  splitted it will be sent to the best available processing node at time. (For
			  more information, see <xref linkend="technical_aspects_multicores"/>.)</step>

			  <step>The job execution will compete for resources with other processes.  (For
			  more information, see <xref
			  linkend="technical_aspects_priority_execution"/>).</step>
			</procedure>
			</para>

			<para>This is the fastest way to execute, skipping the configurations of the
			<emphasis>Run and Setup</emphasis>. Useful keybinds are available here:
			<keycap>Ctrl+R</keycap> runs the selected flows one after another;
			<keycap>Ctrl+Shift+R</keycap> runs the selected flows parallely (keybind activated
			just if multiple flows are selected).</para>

			<note>
				<para>Some execution configuration (like group's nodes, number of tasks
				splitted and priority) can be saved using Setup and Run. That
				configuration is going to be a new default for basic Run.  (For more
				information, see <xref linkend="flows_detailed_execution" />.)</para>
			</note>

		</section>

		<section xml:id="flows_detailed_execution">
			<title>Setup and run</title>
			<para>Many execution details can be set before triggering a job. After setting,
			click on Run to execute the job.</para>

			<figure>
				<title>Run and Setup</title>
				<mediaobject>
					<caption>Execution settings window.
					</caption>
					<imageobject>
						<imagedata fileref="../images/GeBR_flows_detailed_execution_multiple.png"
							contentwidth="470px" contentdepth="608px" />
					</imageobject>
				</mediaobject>
			</figure>

			<para>By clicking the button <guiicon><inlinemediaobject><imageobject><imagedata
			fileref="../../common-images/detailed_execution.png"
			/></imageobject></inlinemediaobject></guiicon>, the following options can be tunned:

			<procedure>
			  <step>When will the jobs be executed? <emphasis>This option just
			  appear if multiple jobs are selected for running (multiple
			  execution).</emphasis>
			  <substeps>
			    <step><guilabel>One after another:</guilabel> Jobs are executed one after
			    another, according  the order of the flows in the flows' list. Each job is
			    triggered only when the previous job has been concluded.</step>

			    <step><guilabel>Simultaneously:</guilabel> All jobs are dispatched
			    simultaneously. Note that this option is not feasible if there is dependency
			    between flows.</step>
			  </substeps>
			  </step>
			
			  <step>The beginning of the execution process can be delayed to wait the
			  conclusion of some running job or it can be triggered immediately
			  (default).</step>
			  
			  <step>Where should the jobs be dispatched? Nodes or set of nodes can be
			  specifically choosen to process the jobs. A special option is <guilabel>Choose
			  automatically</guilabel>. It instructs the maestro to submit each job for the
			  node or set of nodes less overloaded of the
			  domain<indexterm><primary>Domain</primary></indexterm>.</step>

			  <step>The number of tasks settled to split the jobs. This parameter is valid
			  only when there is a parallelizable job among the selected jobs. The nominal
			  capacity is given by the number of cores of the group of nodes that are in
			  charge of the execution of the jobs. For non-parallelizable jobs, this parameter
			  is automatically set to 1. For more information, consult <xref
			  linkend="technical_aspects_multicores"/>.</step>

			  <step>How does the job compete for resources with other processes of the system?
			  Choosing <guilabel>Dispute resources</guilabel>, each job will be dispatched
			  with default priority. Hence, they will compete equally for system resources
			  with all other running processes. This could overload a processing node with too
			  many running processes. By the other hand, choosing <guilabel>Wait for free
			  resources</guilabel>, the execution of each job will delayed whenever the
			  processing node has other process to operate on. This is particularly
			  interesting we running jobs on desktop machines. In that scenario the user
			  experience will not be degradated by the job execution. For more information,
			  consult <xref linkend="technical_aspects_priority_execution"/>.</step>
			</procedure>
			</para>

			<note>
				<para>Decisions made about itens 3, 4 and 5 above can be saved for future
				executions by checking <guilabel>Save preferences</guilabel>.</para>
			</note>
		</section>

		<example>
			<title>Parallel execution</title>

			<para>On a multi-core system, create a flow according to the following
			steps:</para>

			<procedure>
				<step>
					Insert a loop with thirty steps (see
					<xref linkend="flows_loop" />
					for
					further details about loop).
				</step>
				
				<step>Insert a sleep program with parameter set of one second.</step>
				<step>
					Open the
					<guilabel>Execution detailed</guilabel>
					window, and set the minimum number of cores
					(one core) to execute the flow and Press run.
				</step>
				<step>Execute step three again, but now with the maximum number of
					cores (nominal capacity).</step>
				
			</procedure>

			<para>It can be seen that:
				<itemizedlist>
					<listitem>For the minimum number of cores, the flow lasts thirty
						seconds to be executed.
						That is because the only core is responsible
						for the thirty sleeps step.
					</listitem>

					<listitem>For the maximum number of cores, the flow is executed much
						faster.
						For more than thirty cores, it lasts only one second. On a thirty
						cores system,
						each sleep is executed by one core, so that a fast distributed
						execution is possible.
					</listitem>
				</itemizedlist>
			</para>

			<para>This flow is parallelizable only because one step of the loop is totally
			independent of another, so, in a system with multiple machines and multiple cores,
			this flow can be divided to execute all their tasks on the same time, making the
			execution faster.  Therefore, all flows with the same characteristic can take
			advantage of it.</para>
		</example>

	</section>

	<section xml:id="flows_execution_infobar">
	  <title>Following the execution of a flow</title>

	  <para>Flows submitted for execution generate jobs (see <xref
	  linkend="concepts_connections"/>). The status and output of the yielded job can be followed in
	  the same window, still in the <guilabel>Flows</guilabel> tab. A bar in the botton of the window
	  will appear to keep the history of the last jobs dispatched for execution. Through buttons in
	  that bar it is possible to switch among the results of the many jobs.</para>

		<para>Each job execution is represented in the bar as a button, composed by:
			<itemizedlist>
				<listitem>
					an icon, that represents the status of the execution; and
				</listitem>
				<listitem>
					an identifier, which is associated to the number of executions
					of that flow.
				</listitem>
			</itemizedlist>
		</para>

		<para>Differently from the <guilabel>Jobs</guilabel> tab, in the
		<guilabel>Flows</guilabel> tab it is presented just a quick view of the job. Indeed, the
		aim of this features is not to present a full view of the job, but to avoid the switching
		of tabs to follow jobs. The arrow takes to the <guilabel>Jobs</guilabel> tab, where a
		complete view of the flow execution can be consulted.</para>

		<para>When multiple flows are dispatched for execution, instead of staying in the same
		window, GêBR automatically switches to the <guilabel>Jobs</guilabel> tab, where all the
		executions can be seen all together.</para>
	</section>
</chapter>
