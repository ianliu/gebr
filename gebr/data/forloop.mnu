<?xml version="1.0" encoding="utf-8"?>
<flow version="0.3.7">
  <title>Loop</title>
  <description>Executes a flow multiple times</description>
  <help>
    <![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="content-type" content=
  "text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="gebr.css" />
  <title>
    Loop
  </title>
</head>

<body>
  <div class="outer-container">
    <div class="inner-container">
      <div class="header">
        <div class="title">
          <span class="flowtitle">
            <!-- begin tt2 -->Loop<!-- end tt2 -->
          </span>
          <div class="description">
            <!-- begin des -->Executes a flow multiple times<!-- end des -->
          </div>
        </div>
      </div>

      <div class="category">
        <!-- begin cat -->Loops<!-- end cat -->
      </div>

      <div class="main">
        <div class="content">
          <!-- begin cnt --><h2 id="intro">
        Introduction</h2>
<p>
        Executes a flow multiple times.</p>
<h2 id="credits">
        Credits</h2>
<!-- begin cpy --><p>
        Jul 25, 2011: written by G&ecirc;BR Team &lt;biloti@gebrproject.com&gt;</p>
<!-- end cpy --><!-- end cnt -->
        </div>

        <div class="navigation">
          <h2>Index</h2>

          <ul>
            <li><a href="#intro">Introduction</a></li>

            <li><a href="#credits">Credits</a></li>
          </ul>
        </div>

        <div class="clearer"></div>
      </div>

      <div class="footer">
        <span class="left">G&ecirc;BR 0.13.9 (<!-- begin dtd -->0.3.7<!-- end dtd -->) |
                <!-- begin ver -->Jul 25, 2011<!-- end ver --></span>

        <div class="clearer"></div>
      </div>
    </div>
  </div>
</body>
</html>
]]>
</help>
  <author>GêBR Team</author>
  <email>biloti@gebrproject.com</email>
  <dict>
    <parameters default-selection="0" />
  </dict>
  <date>
    <created>2011-03-15T11:43:48.395481Z</created>
    <modified>2011-09-01T16:30:56.440190Z</modified>
    <lastrun />
  </date>
  <category>Loops</category>
  <server address="">
    <io>
      <input />
      <output />
      <error />
    </io>
    <lastrun />
  </server>
  <program stdin="no" stdout="no" stderr="no" status="unconfigured" mpi="" version="GêBR Loop 1.0" control="for">
    <title>Loop</title>
    <binary />
    <description>Executes a flow multiple times</description>
    <help>
      <![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="content-type" content=
  "text/html; charset=utf-8" />
  <link rel="stylesheet" type="text/css" href="gebr.css" />
  <title>
    <!-- begin ttl -->Loop<!-- end ttl -->
  </title>
</head>

<body>
  <div class="outer-container">
    <div class="inner-container">
      <div class="header">
        <div class="title">
          <span class="flowtitle">
            <!-- begin tt2 -->Loop<!-- end tt2 -->
          </span>
          <div class="description">
            <!-- begin des -->Executes a flow multiple times<!-- end des -->
          </div>
        </div>
      </div>

      <div class="category">
        <!-- begin cat -->Loops<!-- end cat -->
      </div>

      <div class="main">
        <div class="content">
          <!-- begin cnt --><h2 id="intro">
        Introduction</h2>
<p>
        Executes a flow multiple times.<br />
        This program has&nbsp;a&nbsp;special treatment,&nbsp;different from all&nbsp;others in the&nbsp;G&ecirc;BR.&nbsp;<br />
        You can have only one Loop menu on each flow, and when insert the program on flow, automatically creates a variable on dictionary, named &quot;iter&quot;.</p>
<!-- begin par --><div class="parameters">
        <h2 id="par">
                Parameters</h2>
<!-- begin lst -->      <ul>
                <li>
                        <span class="label">Initial value</span><br />
                        The initial value&nbsp;which the&nbsp;loop&nbsp;will start.</li>
                <li>
                        <span class="label">Step</span><br />
                        The step&nbsp;of each iteration.</li>
                <li>
                        <span class="reqlabel">Total number of steps</span><br />
                        This value must be&nbsp;positive integer.</li>
        </ul>
<!-- end lst --></div>
<!-- end par --><h2 id="details">
        Description</h2>
<p>
        The variable &quot;iter&quot; can be used only on flow&#39;s variables, and in other programs. This&nbsp;is calculated on each iteration of loop, and uses the follow expression to do that:</p>
<ul>
        <li>
                (<strong>Initial value</strong>) + (<strong>Step</strong>) * (<strong>Total number of steps</strong> - 1).</li>
</ul>
<p>
        All parameters accepts expressions using variables defined on Project or Line.</p>
<h2>
        Usage Example</h2>
<h3>
        Using the Especial Variable &quot;iter&quot;</h3>
<p>
        As an example you can visualize the calendar of years 2001 to 2011.</p>
<ol>
        <li>
                Create a new flow.</li>
        <li>
                Add the &quot;Loop&quot; menu by double clicking it in the &quot;Menus&quot; box at &quot;Flow Editor&quot; tab.</li>
        <li>
                You will see the &quot;Loop&quot; menu at a especial position in the &quot;Flow Sequence&quot; list. Right in the beginning of the list.</li>
        <li>
                Double click it to change its parameters values.</li>
        <li>
                Change &quot;Initial Value&quot; to 2001, &quot;Step&quot; to 1 and total number of steps to 10. With this your loop will go from 2001 to 2011</li>
        <li>
                Now add the &quot;Calendar&quot; program as usual and double click it to change its parameter values.</li>
        <li>
                Change the &quot;Year&quot; parameter value to &quot;iter&quot;</li>
        <li>
                Now run the flow to see the results.</li>
</ol>
<p>
        In the job control tab, you will see the calendars from 2001 to 2011. Because the the flow was run 10 times, and the Calendar program was called 10 times with a different year every time.</p>
<h3>
        Writing the Output to Multiple Files</h3>
<p>
        One of the features of the &quot;Loop&quot; menu is the possibility to write on multiple files, one per step of the Loop. Using the flow created on the previous example, you can write one calendar per file, using the &quot;iter&quot; variable.</p>
<p>
        In order to do that, just change the flow output filename to &quot;year-[iter].txt&quot;. This will create ten output files named from &quot;year-2001.txt&quot; to &quot;year-2011.txt&quot;, each one containing one calendar, from 2001 to 2011.</p>
<p>
        <span class="Apple-style-span" style="font-size: 14px; font-weight: bold; ">Reading the Input from Multiple Files</span></p>
<p>
        In a very similar manner to the previous example, you can read from multiple files.</p>
<p>
        As an example you can concatenate the calendars, created in the previous example, in a single file.</p>
<ol>
        <li>
                Create a new flow.</li>
        <li>
                Add the &quot;Loop&quot; menu by double clicking it in the &quot;Menus&quot; box at &quot;Flow Editor&quot; tab.</li>
        <li>
                You will see the &quot;Loop&quot; menu at a especial position in the &quot;Flow Sequence&quot; list. Right in the beginning of the list.</li>
        <li>
                Double click it to change its parameters values.</li>
        <li>
                Change &quot;Initial Value&quot; to 2001, &quot;Step&quot; to 1 and total number of steps to 10. With this your loop will go from 2001 to 2011</li>
        <li>
                Now add the &quot;Case converter&quot; program as usual and double click it to change its status to configured</li>
        <li>
                Change the &quot;Input file&quot; filename to &quot;year-[iter].txt&quot;</li>
        <li>
                Now run the flow to see the results.</li>
</ol>
<p>
        <span class="Apple-style-span" style="font-size: 14px; font-weight: bold; ">Writing the Output to a Single File</span></p>
<p>
        Taking the flow created in the first example, you can write the output of the entire loop execution to a single file. To do that, just write the &quot;Output file&quot; filename without using the especial variable &quot;iter&quot;. In this case, you also can&#39;t use a variable that uses the iter value somehow.</p>
<p>
        <span class="Apple-style-span" style="font-size: 14px; font-weight: bold; ">Reading the Input from a Single File</span></p>
<p>
        To read the same input file in all iterations of the loop, you just have to use the &quot;Input file&quot; filename without using the especial variable iter. This is done in the same way as in the last example.</p>
<h2 id="credits">
        Credits</h2>
<p>
        G&ecirc;BR Team.</p>
<!-- begin cpy --><!-- end cpy --><!-- end cnt -->
        </div>

        <div class="navigation">
          <h2>Index</h2>

          <ul>
            <li><a href="#intro">Introduction</a></li>

            <!-- begin mpr -->
            <li><a href="#par">Parameters</a></li>
            <!-- end mpr -->

            <li><a href="#details">Description</a></li>

            <li><a href="#notes">Notes</a></li>

            <li><a href="#ref">References</a></li>

            <li><a href="#credits">Credits</a></li>
          </ul>
        </div>

        <div class="clearer"></div>
      </div>

      <div class="footer">
        <span class="left">G&ecirc;BR 0.13.14 (<!-- begin dtd -->0.3.7<!-- end dtd -->) |
                <!-- begin ver -->GêBR Loop 1.0<!-- end ver --></span>

        <div class="clearer"></div>
      </div>
    </div>
  </div>
</body>
</html>
]]>
</help>
    <url>http://www.gebrproject.com</url>
    <parameters default-selection="0">
      <parameter>
        <label>Initial value</label>
        <float min="">
          <property required="no">
            <keyword>ini_value</keyword>
            <value />
            <default>1</default>
          </property>
        </float>
      </parameter>
      <parameter>
        <label>Step</label>
        <float min="">
          <property required="no">
            <keyword>step</keyword>
            <value />
            <default>1</default>
          </property>
        </float>
      </parameter>
      <parameter>
        <label>Total number of steps</label>
        <int min="1">
          <property required="yes">
            <keyword>niter</keyword>
            <value />
            <default />
          </property>
        </int>
      </parameter>
    </parameters>
  </program>
</flow>
